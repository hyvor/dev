#!/bin/bash

# Usage: ./run <component>
# Example: ./run core

set -e

component=$1

if [ -z "$component" ]; then
  echo "Component name is required. Usage: ./run <component>"
  exit 1
fi

if [ ! -d "$component" ]; then
  echo "Component $component does not exist."
  exit 1
fi

################ HELPERS ################


has_option() {
    local option=$1
    shift
    for var in "$@"
    do
        if [ "$var" = "$option" ]; then
        return 0
        fi
    done
    
    return 1
}


################ CLEANUP ################

cleanup() {
  echo "Cleaning up"
  # kil all child processes
  pkill -P $$  --signal 9
  rm -rf $component/backend/packages/internal
}

trap cleanup EXIT

################ INTERNAL LIBRARY ################

# Sync internal library
echo "Syncing internal library"
rsync -avz --exclude 'vendor' internal $component/backend/packages

# Watch internal library for changes
if command -v fswatch >/dev/null 2>&1
then
  echo "Using fswatch to sync internal library"
  fswatch -o internal | xargs -I{} rsync -avzq --exclude 'vendor' internal $component/backend/packages &
else
  echo "NOTICE: fswatch is not available. Please install fswatch to sync internal library"
fi

################ DESIGN SYSTEM ################

# if it has --design option
if has_option "--design" "$@"
then
    echo "Watching and syncing design system"
    cd design || exit
    npm run package:watch &
    cd ..

    rsync -avz design/dist design/package.json $component/frontend/src/design

    # Watch internal library for changes
    if command -v fswatch >/dev/null 2>&1
    then
        echo "Using fswatch to sync design system"
        fswatch -o design/dist | xargs -I{} rsync -avz design/dist design/package.json $component/frontend/src/design &
    else
        echo "NOTICE: fswatch is not available. Please install fswatch to watch & sync design system"
    fi
fi


################ DOCKER COMPOSE ################

# Run compose

get_profile() {
  if has_option "--e2e" "$@"
  then
    echo "e2e"
  else
    echo "dev"
  fi
}

PROFILE=$(get_profile "$@")
echo "Running $component with profile $PROFILE"
docker compose  -f "$component/compose.yaml" --profile "$PROFILE" up --build --watch

cleanup